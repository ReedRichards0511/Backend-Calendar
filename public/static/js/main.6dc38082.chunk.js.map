{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","initalState","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","message","Navbar","useSelector","onClick","startLogout","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","rep","console","log","getState","evento","_id","error","eventStartAdNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dc38082.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n    eventStartAddNew: '[event] Start Add New',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n\n    eventLoaded: '[event]  Events Loaded',\n\n    eventLogout: '[event] Event Logout',\n\n    //autenticacion\n\n    authCheckingFinish: '[auth]  Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","\nimport { types } from '../types/types';\n\n\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded: \n        return {\n            ...state,\n            events: [...action.payload]\n        }\n\n        case types.eventLogout: \n        return {\n            ...initialState\n            \n        }\n\n        default:\n            return state;\n    }\n\n\n}\n","\r\nimport { types } from './../types/types';\r\nconst initalState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initalState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","// const baseURl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `https://mern-calendar-backend-mau.herokuapp.com/api/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url)\r\n    } else {\r\n        return fetch(url, {\r\n            method: method,\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                \r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `https://mern-calendar-backend-mau.herokuapp.com/api/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    } else {\r\n        return fetch(url, {\r\n            method: method,\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n                \r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from './../types/types';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n\r\n        const body = await resp.json();\r\n\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.message, 'error');\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startCheking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.message, 'error');\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(startLogout());\r\n        dispatch( logout())\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import React from 'react';\nimport './login.css';\nimport { useForm } from './../../hooks/useForm';\nimport { useDispatch } from 'react-redux';\nimport { startLogin, startRegister } from './../../actions/auth';\nimport Swal from 'sweetalert2';\n\nexport const LoginScreen = () => {\n\n    const dispatch =  useDispatch();\n\n\n    \n    const [ formLoginValues, handleLoginInputChange ] = useForm( {\n        lEmail: '',\n        lPassword: ''\n    } );\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\n        rName: '',\n        rEmail: '',\n        rPassword1: '',\n        rPassword2: ''\n    } )\n\n    const { lEmail, lPassword } = formLoginValues;\n\n    const {rName, rEmail ,rPassword1, rPassword2} = formRegisterValues;\n\n\n\n    const handleLogin  = (e) => {\n        e.preventDefault();\n        \n        dispatch( startLogin(lEmail, lPassword) );\n    }\n\n\n\n\n\n    const handleRegister  = (e) => {\n        e.preventDefault();\n        \n        if(rPassword1 !== rPassword2) {\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\n        }\n\n\n        dispatch( startRegister( rEmail, rPassword1, rName) );\n    }\n\n    \n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name='lPassword'\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name='rName'\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name='rEmail'\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name='rPassword1'\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name='rPassword2'\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const { name } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch();\n\n    const  handleLogout = () => {\n        dispatch(startLogout())\n    }\n\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n\n            <button\n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import moment from \"moment\";\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n\r\n\r\n    return events.map(e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n\r\n    }));\r\n};","import Swal from 'sweetalert2';\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { prepareEvents } from './../helpers/prepareEvents';\n\n\nexport const eventStartAdNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const { uid, name } = getState().auth;\n\n        const resp = await fetchConToken('events', event, 'POST');\n\n        const body = await resp.json();\n\n        try {\n\n            if (body.ok) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log(event);\n\n                dispatch(eventAddNew(event));\n            }\n\n        } catch (error) {\n            console.log(error.message);\n        }\n\n    }\n}\n\n\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventStartUpdated = (event) => {\n    return async (dispatch) => {\n\n        try {\n\n\n            const rep = await fetchConToken(`events/${event.id}`, event, 'PUT');\n\n            const body = await rep.json();\n\n            if (body.ok) {\n                dispatch(eventUpdated(event));\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error.message);\n        }\n\n    }\n\n}\n\n\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n\n\n            const rep = await fetchConToken(`events/${id}`, {}, 'DELETE');\n\n            const body = await rep.json();\n\n            if (body.ok) {\n                dispatch(eventDeleted());\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error.message);\n        }\n\n\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n\n        const resp = await fetchConToken('events');\n        const body = await resp.json();\n\n        const events = prepareEvents(body.eventos);\n\n        dispatch(eventLoaded(events));\n\n        try {\n\n        } catch (error) {\n            console.log(error.message);\n        }\n\n    }\n\n\n\n}\n\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n})\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport {  eventClearActiveEvent, eventStartUpdated } from '../../actions/events';\nimport { eventStartAdNew } from './../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdated( formValues ) )\n        } else {\n            dispatch( eventStartAdNew({\n                ...formValues\n            }) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from './../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n\n    const {uid} = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n\n    useEffect(() => {\n      \n        dispatch(eventStartLoading() )  \n    }, [dispatch])\n    \n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n\n        \n\n        const style = {\n            backgroundColor: (uid === event.user._id)?'#367CF7': '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startCheking } from './../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        dispatch(startCheking());\n\n    }, [dispatch])\n\n    if (checking) {\n        return <h1>Cargando...</h1>\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={LoginScreen}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}